# Generated by Django 5.2.7 on 2025-10-06 11:12

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import django_ckeditor_5.fields
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filial', '0001_initial'),
        ('menu', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FilterCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название фильтра')),
                ('slug', models.SlugField(help_text='Используется в URL (латиница, цифры, дефис)', max_length=100, unique=True, verbose_name='Ключ для URL')),
                ('order', models.PositiveIntegerField(default=100, help_text='Порядок отображения в списке фильтров', verbose_name='Порядок')),
                ('unit', models.CharField(blank=True, help_text="(Напр., 'мм', 'кг')", max_length=20, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Категория фильтра',
                'verbose_name_plural': 'Категории фильтров',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FilterValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(db_index=True, max_length=255, verbose_name='Значение')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='Ключ для URL')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='products.filtercategory', verbose_name='Категория фильтра')),
            ],
            options={
                'verbose_name': 'Значение фильтра',
                'verbose_name_plural': 'Значения фильтров',
                'ordering': ['category__order', 'category__name', 'order', 'value'],
                'unique_together': {('category', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_name', models.CharField(blank=True, help_text="Основное название без характеристик, напр., 'Канат одинарной свивки'", max_length=200, verbose_name='Базовое название')),
                ('title', models.CharField(db_index=True, help_text='Название ручное', max_length=512, verbose_name='Полное название')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='URL-ключ (слаг)')),
                ('sku', models.CharField(blank=True, db_index=True, help_text='Генерируется автоматически при сохранении, если пустое.', max_length=100, unique=True, verbose_name='Артикул (SKU)')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Описание')),
                ('base_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Цена по умолчанию, если не переопределена в филиале.', max_digits=10, verbose_name='Базовая цена')),
                ('price_type', models.CharField(choices=[('fixed', 'фикс'), ('from', 'от')], default='from', help_text="Определяет, как отображается цена (например, 'от 2000 ₽').", max_length=10, verbose_name='Тип цены')),
                ('unit', models.CharField(blank=True, help_text='напр., шт, кг, м²', max_length=50, verbose_name='Единица измерения')),
                ('is_hidden', models.BooleanField(db_index=True, default=False, help_text='Скрыть товар со всего сайта.', verbose_name='Скрыть')),
                ('is_hit', models.BooleanField(db_index=True, default=False, help_text="Показывать в блоке 'Хиты' на главной.", verbose_name='Хит продаж')),
                ('manufacturer', models.CharField(blank=True, max_length=255, verbose_name='Производитель')),
                ('country_of_origin', models.CharField(blank=True, max_length=100, verbose_name='Страна производства')),
                ('warranty_info', models.CharField(blank=True, max_length=100, verbose_name='Гарантия')),
                ('material', models.CharField(blank=True, max_length=100, verbose_name='Материал')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('order_number', models.PositiveIntegerField(default=100, verbose_name='Порядок')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(editable=False, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='menu.menucatalog', verbose_name='Категория')),
                ('filters', models.ManyToManyField(blank=True, related_name='products', to='products.filtervalue', verbose_name='Значения фильтров')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['order_number'],
            },
        ),
        migrations.CreateModel(
            name='ProductFilialData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Оставьте пустым, чтобы использовать цену родительского филиала или базовую цену.', max_digits=10, null=True, verbose_name='Цена для филиала')),
                ('is_available', models.BooleanField(default=True, verbose_name='В наличии (для филиала)')),
                ('filial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_data', to='filial.filial', verbose_name='Филиал')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filial_data', to='products.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Данные продукта по филиалу',
                'verbose_name_plural': 'Данные продуктов по филиалам',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='product_search_vector_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productfilialdata',
            unique_together={('product', 'filial')},
        ),
    ]
